---
- name: Create new NDP VMs
  hosts: 127.0.0.1
  connection: local
  gather_facts: false

  tasks:
    - name: Create new VMs
      vars:
        new_vm_mac_address: "{{ hostvars[item]['vm_network_adapters_mac_address'] }}"
      community.proxmox.proxmox_kvm:
        # Connection config
        api_host: "{{ proxmox_api_host }}"
        api_token_id: "{{ proxmox_api_token_id }}"
        api_token_secret: "{{ proxmox_api_token_secret }}"
        api_user: "{{ proxmox_api_user }}"
        node: "{{ hostvars[item]['proxmox_node'] }}"
        timeout: 3000

        # Boot config
        bios: ovmf
        boot: 'order=scsi0;net0'
        efidisk0:
          storage: "{{ hostvars[item]['proxmox_storage_pool'] }}"
          format: raw
          efitype: 4m
          pre_enrolled_keys: false

        # VM config
        agent: true
        # args: '--rng0 "source=/dev/urandom,max_bytes=1024,period=1000"'  ## apparently requires root
        cores: "{{ hostvars[item]['vm_cpu_cores'] }}"
        cpu: "x86-64-v2-AES"
        description: "{{ hostvars[item]['vm_description_ubuntu'] }}"
        memory: "{{ hostvars[item]['vm_memory'] }}"
        name: "{{ hostvars[item]['inventory_hostname'] }}"
        net:
          net0: 'virtio={{ new_vm_mac_address }},bridge=vmbr1,tag=1702'
        ostype: l26
        scsi:
          scsi0: "{{ hostvars[item]['proxmox_storage_pool'] }}:{{ hostvars[item]['vm_os_disk_size'] | regex_search('[0-9]+') }}"
        scsihw: virtio-scsi-single
        sockets: 1
        vga: std
        vmid: "{{ hostvars[item]['vm_id'] }}"
      register: created_vms
      # until: created_vms is not failed
      # retries: 10
      loop: "{{ groups['ndp_management'] + groups['ndp_vms'] }}"

    - name: Retrieve information about specific VM by ID
      vars:
        new_vm_id: "{{ hostvars[item]['vm_id'] }}"
      community.proxmox.proxmox_vm_info:
        api_host: "{{ proxmox_api_host }}"
        api_token_id: "{{ proxmox_api_token_id }}"
        api_token_secret: "{{ proxmox_api_token_secret }}"
        api_user: "{{ proxmox_api_user }}"
        type: qemu
        vmid: "{{ new_vm_id }}"
      loop: "{{ groups['ndp_management'] + groups['ndp_vms'] }}"
      register: current_vms_info

    - name: Ensure VMs are started
      vars:
        new_vm_id: "{{ hostvars[item]['vm_id'] }}"
      community.proxmox.proxmox_kvm:
        api_host: "{{ proxmox_api_host }}"
        api_token_id: "{{ proxmox_api_token_id }}"
        api_token_secret: "{{ proxmox_api_token_secret }}"
        api_user: "{{ proxmox_api_user }}"
        vmid: "{{ hostvars[item]['vm_id'] }}"
        state: started
      loop: "{{ groups['ndp_management'] + groups['ndp_vms'] }}"
