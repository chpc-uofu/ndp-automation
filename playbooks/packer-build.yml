---
- name: Build the VM Templates
  hosts: 127.0.0.1
  connection: local
  gather_facts: false

  tasks:
    - name: Retrieve information about specific VM by ID
      vars:
        new_vm_id: "{{ hostvars[item]['vm_id'] }}"
      community.general.proxmox_vm_info:
        api_host: "{{ proxmox_api_host }}"
        api_token_id: "{{ proxmox_api_token_id }}"
        api_token_secret: "{{ proxmox_api_token_secret }}"
        api_user: "{{ proxmox_api_user }}"
        type: qemu
        vmid: "{{ new_vm_id }}"
      loop: "{{ groups['ndp_templates'] }}"
      register: current_vm_templates_info

    - name: Set additional facts
      ansible.builtin.set_fact:
        current_vm_templates: "{{ (current_vm_templates_info['results'] | map(attribute='proxmox_vms')) | flatten | map(attribute='vmid') }}"

    - name: Use Packer to build the VM templates
      when: not hostvars[item]['vm_id'] in current_vm_templates
      ansible.builtin.shell:
        chdir: "{{ playbook_dir }}/../packer/ubuntu-server-noble"
        cmd: >-
          /usr/bin/packer build \
            -var-file secrets.pkrvars.hcl \
            -var proxmox_node={{ hostvars[item]['proxmox_node'] }} \
            -var proxmox_storage_pool={{ hostvars[item]['proxmox_storage_pool'] }} \
            -var vm_cpu_cores={{ hostvars[item]['vm_cpu_cores'] }} \
            -var vm_cpu_sockets={{ hostvars[item]['vm_cpu_sockets'] }} \
            -var vm_id={{ hostvars[item]['vm_id'] }} \
            -var vm_memory={{ hostvars[item]['vm_memory'] }} \
            -var vm_name_ubuntu="{{ hostvars[item]['inventory_hostname'] }}" \
            -var vm_network_adapters_mac_address="{{ hostvars[item]['vm_network_adapters_mac_address'] }}" \
            -var vm_os_disk_size="{{ hostvars[item]['vm_os_disk_size'] }}" \
            .
      args:
        executable: /bin/bash
      register: packer_build_result
      changed_when: "'A template was created' in packer_build_result['stdout']"
      loop: "{{ groups['ndp_templates'] }}"
